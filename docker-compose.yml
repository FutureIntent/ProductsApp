services:
    mysql:
        image: products_mysql_database
        build: /MySQL
        ports:
            - "3306:3306"
        networks:
            - ProductsAppNetwork
        volumes:
            - ./MySQL/data:/var/lib/mysql
        env_file: "/MySQL/MySQL.env"
        restart: always
    nginx:
        image: products_nginx_server
        build: /Nginx
        ports:
            - "80:80"
        networks:
            - ProductsAppNetwork
        volumes:
            - ./Nginx/modules/nginx.conf:/etc/nginx/nginx.conf
            - ./Nginx/modules/conf.d:/etc/nginx/conf.d
            - ./Nginx/modules/logs:/var/log/nginx
            - ./Nginx/modules/public:/usr/share/nginx/public
        env_file: "/Nginx/Nginx.env"
        restart: always
    laravel_app:
        image: products_laravel_app
        build: /LaravelApp
        command: sh -c "composer install && php artisan serve --host=0.0.0.0 --port=8000"
        ports:
            - "8000:8000"
        networks:
            - ProductsAppNetwork
        volumes:
            - ./LaravelApp:/app/projects/laravelApp
            - ./Nginx/modules/public:/app/projects/laravelApp/storage/app/public
            - ./LaravelApp/php/php-config.ini:/usr/local/etc/php/conf.d/php-config.ini
        env_file: "/LaravelApp/LaravelApp.env"
        depends_on:
            - mysql
            - nginx
    react_app:
        image: products_react_app
        build: /ReactApp
        command: sh -c "yarn install && yarn run dev"
        ports:
            - "5173:5173"
        networks:
            - ProductsAppNetwork
        volumes:
            - ./ReactApp:/app/projects/reactApp
        env_file: /ReactApp/ReactApp.env
        depends_on:
            - nginx

networks:
    ProductsAppNetwork:
        name: ProductsAppNetwork
        driver: bridge
